{"version":3,"sources":["../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js"],"names":["createSvgIcon","_jsx","d","getAvatarUtilityClass","slot","generateUtilityClass","avatarClasses","generateUtilityClasses","_excluded","AvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","colorDefault","theme","_extends","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","shape","color","palette","background","default","backgroundColor","mode","grey","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","Avatar","React","inProps","ref","useThemeProps","alt","childrenProp","children","className","component","imgProps","sizes","src","srcSet","other","_objectWithoutPropertiesLoose","loaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","slots","composeClasses","useUtilityClasses","as","clsx"],"mappings":"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","file":"static/js/4.149245a8.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none'\n}, ownerState.variant === 'rounded' && {\n  borderRadius: theme.shape.borderRadius\n}, ownerState.variant === 'square' && {\n  borderRadius: 0\n}, ownerState.colorDefault && {\n  color: theme.palette.background.default,\n  backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(AvatarImg, _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      ownerState: ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"],"sourceRoot":""}